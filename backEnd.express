// File: index.js

const express = require("express");
const cors = require("cors");

const app = express();
const port = process.env.PORT || 3000;

app.use(cors());
app.use(express.json());

// In-memory todos array
let todos = [];
let nextId = 1;

// GET all todos
app.get("/todos", (req, res) => {
  res.json(todos);
});

// POST create a new todo
app.post("/todos", (req, res) => {
  const { title } = req.body;
  const newTodo = { id: nextId++, title, completed: false };
  todos.push(newTodo);
  res.status(201).json(newTodo);
});

// PUT replace a todo
app.put("/todos/:id", (req, res) => {
  const id = parseInt(req.params.id);
  const index = todos.findIndex((t) => t.id === id);
  if (index === -1) return res.status(404).json({ error: "Todo not found" });

  const { title, completed } = req.body;
  todos[index] = { id, title, completed };
  res.json(todos[index]);
});

// PATCH update a todo
app.patch("/todos/:id", (req, res) => {
  const id = parseInt(req.params.id);
  const todo = todos.find((t) => t.id === id);
  if (!todo) return res.status(404).json({ error: "Todo not found" });

  const { title, completed } = req.body;
  if (title !== undefined) todo.title = title;
  if (completed !== undefined) todo.completed = completed;

  res.json(todo);
});

// DELETE a todo
app.delete("/todos/:id", (req, res) => {
  const id = parseInt(req.params.id);
  const index = todos.findIndex((t) => t.id === id);
  if (index === -1) return res.status(404).json({ error: "Todo not found" });

  const removed = todos.splice(index, 1);
  res.json(removed[0]);
});

// Root route
app.get("/", (req, res) => {
  res.send("Welcome to the Node.js Backend Todo API");
});

// Start the server
app.listen(port, () => {
  console.log(`Todo backend API listening at http://localhost:${port}`);
});
